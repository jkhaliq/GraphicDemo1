package p2;

/*Javeria
 * CIS 211-5H1
 * This program can read and write the java file. like P1arts.txt,
 * P1artist.txt and p1arts.txt.
 */
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;

public class Project1 {

	private int ArtistID;
	private String artistname;

	Project1(int No, String name) {
		this.ArtistID = No;
		this.artistname = name;
	}

	// method artistName the artistName to set
	public void getArtistName(String artistName) {
		this.artistname = artistName;
	}

	// method the artistName
	public String findArtistName() {
		return artistname;
	}

	// method the artistId
	public int findArtistId() {
		return ArtistID;
	}

	// method to string method.
	public String toString() {
		return this.ArtistID + " " + this.artistname;
	}

	// method artistId
	public void setArtistId(int artistId) {
		this.ArtistID = artistId;
	}

	public static void main(String[] args) throws IOException {
		// First Module starts
		Project1 artist1 = new Project1(1, "Acconci \t");
		Project1 artist2 = new Project1(2, "Ames\t");
		Project1 artist3 = new Project1(3, "Aserty \t");
		Project1 artist4 = new Project1(4, "Baron\t");
		Project1 artist5 = new Project1(5, "Battenberg\t");
		System.out.println(artist1.toString());
		System.out.println(artist2.toString());
		System.out.println(artist3.toString());
		System.out.println(artist4.toString());
		System.out.println(artist5.toString());
		System.out.println("please check the p1artists_out.txt");
		// First Module completed
		List<Project1> artistList = null;
		try {
			artistList = new ArrayList<Project1>();
			ArrayOfArtist(artistList);
		} catch (IOException i) {
			System.out.println("Error, Exception while reading from file");
		}

		try {
			File(artistList);
		} catch (IOException i) {
			System.out.println(" Error, Exception while reading from file.");
		}
	}

	private static void File(List<Project1> artistList) throws IOException {
		// Getting the file P1arts.txt
		Scanner scanner = new Scanner(new FileReader("p1arts.txt"));
		// Creating a output file P1artist_out1.txt
		File OutPutfile = new File("p1artists_out1.txt");
		FileWriter Filewriter = new FileWriter(OutPutfile);
		BufferedWriter outputWriter = new BufferedWriter(Filewriter);
		String ArtId = null;
		String title = null;

		int artistId = 0;
		String ApprisedValue = null;
		outputWriter.write("ArtID\t\tTitle\t\t\t\t\tArtistID\t\t\t\t\tAppraised Value ");
		outputWriter.newLine();
		int i = 1;
		int totalValue = 0;

		// Loop until the P1Arts file has next line
		while (scanner.hasNext()) {
			String string = null;
			StringBuffer Buffer = new StringBuffer();
			// ArtId
			ArtId = scanner.next();
			while (null != (string = scanner.next())) {
				if (!string.matches("^[\\d ]*$")) {
					Buffer.append(string + " ");
				} else {
					// ArtTitle
					title = Buffer.toString() + " ";
					boolean artistFound = false;
					for (Project1 artist : artistList) {
						artistId = artist.findArtistId();
						int ID = Integer.parseInt(string);
						if (artistId == ID) {
							// artistName = artist.getArtistName();
							artistFound = true;
							break;
						}
					}
					if (!artistFound) {
						System.out.println("Artist id " + string + " not present in the P1Arts file.");
						artistFound = true;
					}
					ApprisedValue = scanner.next();
					totalValue += Integer.valueOf(ApprisedValue);
					String titlefinal = null;

					// Padding spaces for columns in output file
					if (title.length() < 70) {
						titlefinal = String.format("%-35s", title);
					}

					outputWriter.write(ArtId + "\t\t" + titlefinal + "" + artistId + "\t\t\t" + "\t\t" + ApprisedValue);

					break;
				}
			}
			// New line in output file
			outputWriter.newLine();
			i++;
		}
		outputWriter.write("The total number :" + i + " and the total value:" + totalValue);
		outputWriter.flush();
		outputWriter.close();
		scanner.close();
	}

	private static void ArrayOfArtist(List<Project1> artistList) throws IOException {
		// Get the file
		Scanner myfile = new Scanner(new FileReader("p1artists.txt"));
		// boolean for line number
		int NumberOfLine = 1;
		boolean error = false;
		// Out file creation
		File outPutfile = new File("p1artists_out1.txt");
		// Creating a file stream to accept stream data
		FileWriter fstream = new FileWriter(outPutfile);
		// Writer to write the data to file
		BufferedWriter outputWriter = new BufferedWriter(fstream);
		String artistName = null;
		int artistId = 0;
		
		while (myfile.hasNext()) {

			try {
				artistId = Integer.parseInt(myfile.next());
			} catch (NumberFormatException nfe) {
				error = true;
			}
			try {
				if (null != (artistName = myfile.nextLine()))
					artistList.add(new Project1(artistId, artistName));
				outputWriter.write(artistId + "\t\t");
				outputWriter.newLine();
			} catch (Exception e) {
				System.out.println("Error in the file.");
			}
			// Error handling
			if (error) {
				System.out.println("Line Number :" + NumberOfLine + "\tArtist Id:" + artistId);
				System.out.println("Artist ID should be in numeric format only.");
				error = false;
			}
			NumberOfLine++;
		}
		myfile.close();
		outputWriter.flush();
		outputWriter.close();
	}

}
